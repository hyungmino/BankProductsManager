<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
MenuMapper 인터페이스의 메소드 호출 시 실행 될 구문을 XML 파일에 기재하는 방법
1. Mapper 인터페이스와 동일한 패키지에 위치해야 한다.
2. Mapper 인터페이스의 풀 네임을 네임스페이스로 지정해야 한다.
3. Mapper 인터페이스와 XML의 이름이 동일해야 한다.
4. 작성한 메소드이 이름과 id가 일치하고, 리턴 타입이 일치하는 쿼리문을 모두 작성해야 한다.
-->
<mapper namespace="bank.ProductMapper">


    <!-- 조회한 컬럼과 DTO를 매핑시키기 위한 설정이다. -->
    <resultMap id="productResultMap" type="common.ProductDTO">
        <id property="productCode" column="PRODUCT_CODE"/>   <!-- id는 PK -->
        <result property="productName" column="PRODUCT_NAME"/>    <!-- property에는 MenuDTO의 필드명 일치 -->
        <result property="interestRate" column="PRODUCT_INTEREST_RATE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
        <result property="period" column="PRODUCT_PERIOD_YEAR"/>
        <result property="age" column="PRODUCT_AGE"/>
        <result property="price" column="PRODUCT_PRICE"/>

    </resultMap>

    <select id="selectAllMenu" resultMap="productResultMap">
        <!-- resultMap에 설정한 값을 그대로 가져가 실행하겠다라는 의미 -->
        SELECT
               PRODUCT_CODE
             , PRODUCT_NAME
             , PRODUCT_INTEREST_RATE
             , CATEGORY_CODE
             , PRODUCT_PERIOD_YEAR
             , PRODUCT_AGE
             , PRODUCT_PRICE
        FROM TBL_PRODUCT
        ORDER BY PRODUCT_CODE
    </select>

    <select id="selectDepositAll" resultMap="productResultMap">
        SELECT
               PRODUCT_CODE
             , PRODUCT_NAME
             , PRODUCT_INTEREST_RATE
             , CATEGORY_CODE
             , PRODUCT_PERIOD_YEAR
             , PRODUCT_AGE
             , PRODUCT_PRICE
          FROM TBL_PRODUCT
         <where>
             PRODUCT_NAME LIKE '%' || '예금' || '%'
         </where>
    </select>

    <select id="depositPrice" parameterType="_int" resultMap="productResultMap">
        SELECT
               PRODUCT_CODE
             , PRODUCT_NAME
             , PRODUCT_INTEREST_RATE
             , CATEGORY_CODE
             , PRODUCT_PERIOD_YEAR
             , PRODUCT_AGE
             , PRODUCT_PRICE
        FROM TBL_PRODUCT
       WHERE PRODUCT_NAME LIKE '%' || '예금' || '%'
       <if test="price gte 0 and price lt 500">
           <![CDATA[
           AND PRODUCT_PRICE < #{ price }
           ]]>
       </if>
        <if test="price gte 500 and price lt 1000">
            AND PRODUCT_PRICE BETWEEN 500 AND #{ price }
        </if>
        <if test="price gte 1000 and price lt 1500">
            AND PRODUCT_PRICE BETWEEN 1000 AND #{ price }
        </if>
        <if test="price gte 1500 and price lte 2000">
            AND PRODUCT_PRICE BETWEEN 1500 AND #{ price }
        </if>
        <if test="price gt 2000">
            AND PRODUCT_PRICE BETWEEN 2000 AND #{ price }
        </if>
        ORDER BY PRODUCT_PRICE

    </select>
    
    <select id="maxInterestRate" resultMap="productResultMap">
        SELECT
               PRODUCT_CODE
             , PRODUCT_NAME
             , PRODUCT_INTEREST_RATE
             , CATEGORY_CODE
             , PRODUCT_PERIOD_YEAR
             , PRODUCT_AGE
             , PRODUCT_PRICE
          FROM TBL_PRODUCT
        <where>
            PRODUCT_NAME LIKE '%' || '예금' || '%'
        </where>
         ORDER BY PRODUCT_INTEREST_RATE DESC
    </select>

    <select id="selectInstallmentSavingAll" resultMap="productResultMap">
        SELECT
               PRODUCT_CODE
             , PRODUCT_NAME
             , PRODUCT_INTEREST_RATE
             , CATEGORY_CODE
             , PRODUCT_PERIOD_YEAR
             , PRODUCT_AGE
             , PRODUCT_PRICE
          FROM TBL_PRODUCT
        <where>
            PRODUCT_NAME LIKE '%' || '적금' || '%'
        </where>
    </select>

    <select id="installmentSavingPrice" parameterType="_int" resultMap="productResultMap">
        SELECT
              PRODUCT_CODE
            , PRODUCT_NAME
            , PRODUCT_INTEREST_RATE
            , CATEGORY_CODE
            , PRODUCT_PERIOD_YEAR
            , PRODUCT_AGE
            , PRODUCT_PRICE
         FROM TBL_PRODUCT
        WHERE PRODUCT_NAME LIKE '%' || '적금' || '%'
        <if test="price gte 0 and price lt 100">
            <![CDATA[
               AND PRODUCT_PRICE < #{ price }
               ]]>
        </if>
        <if test="price gte 100 and price lt 200">
            AND PRODUCT_PRICE BETWEEN 100 AND #{ price }
        </if>
        <if test="price gte 200 and price lt 300">
            AND PRODUCT_PRICE BETWEEN 200 AND #{ price }
        </if>
        <if test="price gte 300 and price lt 400">
            AND PRODUCT_PRICE BETWEEN 300 AND #{ price }
        </if>
        <if test="price gt 500">
            AND PRODUCT_PRICE BETWEEN 500 AND #{ price }
        </if>
        ORDER BY PRODUCT_PRICE
    </select>

    <select id="installmentSavingMaxInterestRate" resultMap="productResultMap">
        SELECT
               PRODUCT_CODE
             , PRODUCT_NAME
             , PRODUCT_INTEREST_RATE
             , CATEGORY_CODE
             , PRODUCT_PERIOD_YEAR
             , PRODUCT_AGE
             , PRODUCT_PRICE
          FROM TBL_PRODUCT
        <where>
            PRODUCT_NAME LIKE '%' || '적금' || '%'
        </where>
        ORDER BY PRODUCT_INTEREST_RATE DESC
    </select>

    <select id="selectLoanAll" resultMap="productResultMap">
        SELECT
              PRODUCT_CODE
            , PRODUCT_NAME
            , PRODUCT_INTEREST_RATE
            , CATEGORY_CODE
            , PRODUCT_PERIOD_YEAR
            , PRODUCT_AGE
            , PRODUCT_PRICE
         FROM TBL_PRODUCT
        <where>
            PRODUCT_NAME LIKE '%' || '대출' || '%'
        </where>
    </select>

    <select id="loanPrice" resultMap="productResultMap">
        SELECT
               PRODUCT_CODE
             , PRODUCT_NAME
             , PRODUCT_INTEREST_RATE
             , CATEGORY_CODE
             , PRODUCT_PERIOD_YEAR
             , PRODUCT_AGE
             , PRODUCT_PRICE
          FROM TBL_PRODUCT
        WHERE PRODUCT_NAME LIKE '%' || '대출' || '%'
        <if test="price gte 0 and price lt 2000">
            <![CDATA[
               AND PRODUCT_PRICE < #{ price }
               ]]>
        </if>
        <if test="price gte 2000 and price lt 4000">
            AND PRODUCT_PRICE BETWEEN 2000 AND #{ price }
        </if>
        <if test="price gte 4000 and price lt 6000">
            AND PRODUCT_PRICE BETWEEN 4000 AND #{ price }
        </if>
        <if test="price gte 6000">
            AND PRODUCT_PRICE BETWEEN 6000 AND #{ price }
        </if>
        ORDER BY PRODUCT_PRICE
    </select>

    <select id="loanMinInterestRate" resultMap="productResultMap">
        SELECT
               PRODUCT_CODE
             , PRODUCT_NAME
             , PRODUCT_INTEREST_RATE
             , CATEGORY_CODE
             , PRODUCT_PERIOD_YEAR
             , PRODUCT_AGE
             , PRODUCT_PRICE
          FROM TBL_PRODUCT
        <where>
            PRODUCT_NAME LIKE '%' || '대출' || '%'
        </where>
        ORDER BY PRODUCT_INTEREST_RATE
    </select>

    <select id="searchProductByNameOrCode" parameterType="hashmap" resultMap="productResultMap">
        SELECT
               PRODUCT_CODE
             , PRODUCT_NAME
             , PRODUCT_INTEREST_RATE
             , CATEGORY_CODE
             , PRODUCT_PERIOD_YEAR
             , PRODUCT_AGE
             , PRODUCT_PRICE
          FROM TBL_PRODUCT
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="nameValue != null">
                PRODUCT_NAME LIKE '%' || #{ nameValue } || '%'
            </if>
            <if test="codeValue != null">
                CATEGORY_CODE LIKE '%' || #{ codeValue } || '%'
            </if>
        </trim>
    </select>

    <update id="modifyProduct" parameterType="hashmap">
        UPDATE
               TBL_PRODUCT
        <trim prefix="SET" prefixOverrides=",">
            <if test="name =! null and name != ''">
                PRODUCT_NAME = #{ productName }
            </if>
            <if test="rate =! null and rate != ''">
                , PRODUCT_INTEREST_RATE = #{ interestRate }
            </if>
            <if test="categoryCode =! null and categoryCode gt 0">
                , CATEGORY_CODE = #{ categoryCode }
            </if>
            <if test="period =! null and period != ''">
                , PRODUCT_PERIOD_YEAR = #{ period }
            </if>
            <if test="age =! null and period != ''">
                , PRODUCT_AGE = #{ age }
            </if>
            <if test="price =! null and price != ''">
                , PRODUCT_PRICE = #{ price }
            </if>
        </trim>
        WHERE PRODUCT_CODE = #{ productCode }
    </update>

    <insert id="insertProduct" parameterType="common.ProductDTO">
        INSERT
        INTO TBL_PRODUCT
        (
        PRODUCT_CODE
        , PRODUCT_NAME
        , PRODUCT_INTEREST_RATE
        , CATEGORY_CODE
        , PRODUCT_PERIOD_YEAR
        , PRODUCT_AGE
        , PRODUCT_PRICE
        )
        VALUES
        (
        SEQ_PRODUCT_CODE.NEXTVAL
        , #{ productName }
        , #{ interestRate }
        , #{ categoryCode }
        , #{ period }
        , #{ age }
        , #{ price }
        )
    </insert>

    <delete id="deleteProduct" parameterType="_int">
        DELETE
          FROM TBL_PRODUCT
         WHERE PRODUCT_CODE = #{ productCode }
    </delete>

</mapper>